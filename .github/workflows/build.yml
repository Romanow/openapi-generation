name: Build project
on: [ push ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "gradle"

      - name: Install tflint
        uses: terraform-linters/setup-tflint@v3

      - name: Validate
        uses: pre-commit/action@v3.0.0

      - name: Build project
        uses: eskatos/gradle-command-action@v2
        with:
          arguments: clean build

      - name: Upload Admin build
        uses: actions/upload-artifact@v3
        with:
          name: jar
          retention-days: 1
          path: server/build/libs/server.jar

  test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: server/build/libs/

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: docker compose up -d --wait

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "gradle"

      - name: Build project
        uses: eskatos/gradle-command-action@v2
        with:
          arguments: :integration-test:integrationTest

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v

  publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: server/build/libs/

      - name: Build images
        timeout-minutes: 5
        run: docker compose build

      - name: Push images
        run: docker compose push

  deploy:
    name: Deploy DigitalOcean app
    runs-on: ubuntu-latest
    needs: publish
    environment:
      name: digitalocean
    steps:
      - uses: actions/checkout@v3

      - name: Terraform deploy
        run: |
          cd deploy/
          terraform init
          terraform apply -auto-approve
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          TF_VAR_do_token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
