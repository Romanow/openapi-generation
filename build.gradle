plugins {
    id "idea"
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.9.22"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.9.25" apply false
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.22" apply false
    id "org.jlleitschuh.gradle.ktlint" version "12.1.1" apply false
    id "org.springframework.boot" version "3.2.8" apply false
    id "io.spring.dependency-management" version "1.1.0"
    id "org.openapi.generator" version "7.8.0" apply false
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

ext {
    springBootVersion = "3.2.8"
    springShellVersion = "3.2.3"
    openApiVersion = "2.1.0"
    openApiToolsVersion = "0.2.6"
    jakartaAnnotationsVersion = "2.1.1"
    restAssuredVersion = "5.4.0"
    postgresContainerVersion = "1.20.1"
}

allprojects { ->
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "io.spring.dependency-management"

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    [compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

    repositories {
        mavenCentral()
    }

    ktlint {
        version.set("1.2.1")
        filter {
            exclude { entry -> entry.file.toString().contains("generated") }
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            mavenBom "org.springframework.shell:spring-shell-dependencies:$springShellVersion"
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    }

    test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
        }
    }

    processResources {
        filesMatching(["**/properties-from-gradle.properties"]) {
            expand(project.properties)
        }
    }
}
